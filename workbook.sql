/* 학과 TB_DEPARTMENT
 * 
 * 학과 번호 DEPARTMENT_NO
 * 학과 이름 DEPARTMENT_NAME 
 * 계열 CATEGORY
 * 개설 여부 OPEN_YN 
 * 정원 CAPACITY
 * */

/* 학생 TB_STUDENT
 * 
 * 학생 번호 STUDENT_NO
 * 학과 번호 DEPARTMENT_NO
 * 학생 이름 STUDENT_NAME
 * 학생 주민번호 STUDENT_SSN
 * 학생 주소 STUDENT_ADDRESS
 * 입학 일자 ENTRANCE
 * 휴학 여부 ABSENCE_YN
 * 지도 교수 번호 COACH_PROFESSOR_NO
 * */

/* 과목 TB_CLASS
 * 
 * 과목 번호 CLASS_NO 
 * 학과 번호 DEPARTMENT_NO
 * 선수 과목 번호 PREATTENDING_CLASS_NO
 * 과목 이름 CLASS_NAME 
 * 과목 구분 CLASS_TYPE 
 * */

/* 과목 교수 TB_CLASS_PROFESSOR
 * 
 * 과목 번호 CLASS_NO 
 * 교수 번호 PROFESSOR_NO
 * */

/* 교수 TB_PROFESSOR
 * 
 * 교수 번호 PROFESSOR_NO
 * 교수 이름 PROFESSOR_NAME
 * 교수 주민번호 PROFESSOR_SSN
 * 교수 주소 PROFESSOR_ADDRESS
 * 학과 번호 DEPARTMENT_NO
 * */

/* 성적 TB_GRADE
 * 
 * 학기 번호 TERM_NO
 * 과목 번호 CLASS_NO 
 * 학생 번호 STUDENT_NO
 * 학점 POINT
 * 
 * */



-- BASIC

-- 1.
SELECT DEPARTMENT_NAME, CATEGORY FROM TB_DEPARTMENT;

-- 2. 
SELECT DEPARTMENT_NAME,'의 정원은', CAPACITY, '명 입니다' FROM TB_DEPARTMENT;

-- 3. 
SELECT STUDENT_NO, STUDENT_NAME FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE ABSENCE_YN = 'Y'
AND DEPARTMENT_NAME = '국어국문학과'
AND SUBSTR(STUDENT_SSN,8,1)=2;

-- 4. 
SELECT STUDENT_NAME FROM TB_STUDENT
WHERE STUDENT_NO = 'A513079'
OR STUDENT_NO = 'A513090'
OR STUDENT_NO = 'A513091'
OR STUDENT_NO = 'A513110'
OR STUDENT_NO = 'A513119';

-- 5. 
SELECT DEPARTMENT_NAME, CATEGORY FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;

-- 6.
SELECT PROFESSOR_NAME FROM TB_PROFESSOR  
WHERE DEPARTMENT_NO IS NULL;

-- 7.
SELECT * FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

-- 8.
SELECT CLASS_NO FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

-- 9.
SELECT DISTINCT CATEGORY FROM TB_DEPARTMENT;

-- 10. 
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN, STUDENT_ADDRESS, ABSENCE_YN, ENTRANCE_DATE  FROM TB_STUDENT
WHERE STUDENT_ADDRESS LIKE '전주시%'
AND ABSENCE_YN = 'N'
AND EXTRACT (YEAR FROM ENTRANCE_DATE) = 2002;


----------------------------------------------------------------------------------------------

-- FUNCTION

-- 1.
SELECT STUDENT_NO, STUDENT_NAME, ENTRANCE_DATE
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '002'
ORDER BY ENTRANCE_DATE;

-- 2.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE PROFESSOR_NAME NOT LIKE '___';

-- 3.
SELECT DISTINCT PROFESSOR_NAME AS "교수 이름",
TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) - TO_NUMBER('19'||SUBSTR(PROFESSOR_SSN,1 ,2 ))  나이
FROM TB_PROFESSOR
ORDER BY 나이;

-- 4. 
SELECT SUBSTR(PROFESSOR_NAME, 2) 이름
FROM TB_PROFESSOR;

-- 5.
SELECT STUDENT_NO, STUDENT_NAME 
FROM TB_STUDENT
WHERE TO_NUMBER('19'||SUBSTR(STUDENT_SSN,1 ,2 )) + 19 > TO_CHAR(ENTRANCE_DATE,'YYYY');


-- 6.
SELECT TO_CHAR(TO_DATE('20201224','YYYYMMDD')+LEVEL, 'YYYY-MM-DD') AS "DATE"
     , TO_CHAR(TO_DATE('20201224','YYYYMMDD')+LEVEL, 'DAY') AS "DAY"
     , TO_CHAR(TO_DATE('20201224','YYYYMMDD')+LEVEL, 'DY') AS "DY"
     , TO_CHAR(TO_DATE('20201224','YYYYMMDD')+LEVEL, 'D') AS "D"
  FROM DUAL
CONNECT BY LEVEL <= 7;

-- 7.
SELECT TO_DATE('99/10/11','YY/MM/DD'), TO_DATE('49/10/11','YY/MM/DD') FROM DUAL;
SELECT TO_DATE('99/10/11','RR/MM/DD'), TO_DATE('49/10/11','RR/MM/DD') FROM DUAL;
-- TO_DATE('99/10/11','YY/MM/DD'), TO_DATE('49/10/11','YY/MM/DD')
-- 2099/10/11                      2049/10/11
-- TO_DATE('99/10/11','RR/MM/DD'), TO_DATE('49/10/11','RR/MM/DD')
-- 1999/10/11                      2049/10/11

-- 8.
SELECT STUDENT_NO, STUDENT_NAME FROM TB_STUDENT
WHERE STUDENT_NO NOT LIKE 'A%';

-- 9.
SELECT ROUND(AVG(POINT),1) AS "평점" FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

-- 10.
SELECT DEPARTMENT_NO AS "학과 번호",
COUNT(DEPARTMENT_NO) AS "학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;


SELECT * FROM TB_STUDENT; 

-- 11.
SELECT COUNT(*) FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

-- 12.
SELECT SUBSTR(TERM_NO,1,4) AS 년도, ROUND(AVG(POINT),1) AS "년도 별 평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO,1,4)
ORDER BY 1;

-- 13.
SELECT DEPARTMENT_NO AS "학과 코드 명",
COUNT(DEPARTMENT_NO) AS "휴학생 수"
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

-- 14.
SELECT STUDENT_NAME AS "동일 이름", COUNT(*) AS "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME HAVING COUNT(*) > 1;

-- 15.
SELECT NVL(SUBSTR(TERM_NO,1,4), ' ') AS 년도, NVL(SUBSTR(TERM_NO,5,2),' ') AS 학기, ROUND(AVG(POINT),1) AS 평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO,1,4),SUBSTR(TERM_NO,5,2))
ORDER BY SUBSTR(TERM_NO,1,4);

--------------------------------------------------------------------------

-- OPTION

-- 1.
SELECT STUDENT_NAME AS "학생 이름", STUDENT_ADDRESS 주소지
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

-- 2.
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
ORDER BY STUDENT_SSN DESC;

-- 3.
SELECT STUDENT_NAME 이름, STUDENT_NO 학번, STUDENT_ADDRESS AS "거주지 주소"  
FROM TB_STUDENT
WHERE STUDENT_NO NOT LIKE 'A%'
AND (STUDENT_ADDRESS LIKE '경기도%' OR STUDENT_ADDRESS LIKE '강원도%');


-- 4.
SELECT * FROM TB_DEPARTMENT;

SELECT PROFESSOR_NAME , PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = '005'
ORDER BY PROFESSOR_SSN;

-- 5.
SELECT STUDENT_NO, POINT  
FROM TB_GRADE
WHERE CLASS_NO = 'C3118100'
AND TERM_NO = '200402'
ORDER BY POINT DESC;

-- 6.
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
LEFT JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

-- 7.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS 
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO);

-- 8.
SELECT DISTINCT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_PROFESSOR USING (DEPARTMENT_NO);

-- 9.
SELECT DISTINCT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_PROFESSOR USING (DEPARTMENT_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE CATEGORY = '인문사회';

-- 10.
SELECT S.STUDENT_NO 학번, STUDENT_NAME "학생 이름", ROUND(AVG(POINT),1) "전체 평점"
FROM TB_GRADE G
JOIN TB_STUDENT S ON(S.STUDENT_NO = G.STUDENT_NO)
JOIN TB_DEPARTMENT D ON(S.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY S.STUDENT_NO, STUDENT_NAME
ORDER BY 1;

-- 11.
SELECT DEPARTMENT_NAME AS "학과 이름" , STUDENT_NAME "학생 이름" , PROFESSOR_NAME "지도 교수 이름"
FROM TB_STUDENT TS
JOIN TB_DEPARTMENT TD ON (TS.DEPARTMENT_NO = TD.DEPARTMENT_NO)
JOIN TB_PROFESSOR TP ON (TP.DEPARTMENT_NO = TS.DEPARTMENT_NO)
WHERE STUDENT_NO = 'A313047';

-- 12.
SELECT STUDENT_NAME, TERM_NO FROM TB_STUDENT TS
LEFT JOIN TB_GRADE TG ON (TS.STUDENT_NO = TG.STUDENT_NO)
JOIN TB_CLASS TC ON (TC.DEPARTMENT_NO = TS.DEPARTMENT_NO)
WHERE CLASS_NAME = '인간관계론'
AND TERM_NO LIKE '2007%';

-- 13.
SELECT CLASS_NAME, DEPARTMENT_NAME FROM TB_CLASS TC
LEFT JOIN TB_DEPARTMENT TD ON (TC.DEPARTMENT_NO = TD.DEPARTMENT_NO)
LEFT JOIN TB_CLASS_PROFESSOR TDP ON (TDP.PROFESSOR_NO = TD.DEPARTMENT_NO)
WHERE PROFESSOR_NO IS NULL;






















